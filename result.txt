Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols: + create Terraform will perform the following actions:  # google_compute_instance.sample_vm will be created  + resource "google_compute_instance" "sample_vm" *** + can_ip_forward = false + cpu_platform = (known after apply) + current_status = (known after apply) + deletion_protection = false + effective_labels = *** + "goog-terraform-provisioned" = "true" *** + id = (known after apply) + instance_id = (known after apply) + label_fingerprint = (known after apply) + machine_type = "f1-micro" + metadata_fingerprint = (known after apply) + metadata_startup_script = "sudo apt-get update; sudo apt-get install -yq build-essential python3-pip rsync; pip install flask" + min_cpu_platform = (known after apply) + name = "sample-vm" + project = "stg-piny940" + self_link = (known after apply) + tags = [ + "ssh", ] + tags_fingerprint = (known after apply) + terraform_labels = *** + "goog-terraform-provisioned" = "true" *** + zone = "us-west1-a" + boot_disk *** + auto_delete = true + device_name = (known after apply) + disk_encryption_key_sha256 = (known after apply) + kms_key_self_link = (known after apply) + mode = "READ_WRITE" + source = (known after apply) + initialize_params *** + image = "debian-cloud/debian-11" + labels = (known after apply) + provisioned_iops = (known after apply) + provisioned_throughput = (known after apply) + size = (known after apply) + type = (known after apply) *** *** + confidential_instance_config (known after apply) + guest_accelerator (known after apply) + network_interface *** + internal_ipv6_prefix_length = (known after apply) + ipv6_access_type = (known after apply) + ipv6_address = (known after apply) + name = (known after apply) + network = (known after apply) + network_ip = (known after apply) + stack_type = (known after apply) + subnetwork = (known after apply) + subnetwork_project = (known after apply) + access_config *** + nat_ip = (known after apply) + network_tier = (known after apply) *** *** + reservation_affinity (known after apply) + scheduling (known after apply) ***  # google_compute_network.vpc_network will be created  + resource "google_compute_network" "vpc_network" *** + auto_create_subnetworks = false + delete_default_routes_on_create = false + gateway_ipv4 = (known after apply) + id = (known after apply) + internal_ipv6_range = (known after apply) + mtu = 1460 + name = "my-custom-mode-network" + network_firewall_policy_enforcement_order = "AFTER_CLASSIC_FIREWALL" + numeric_id = (known after apply) + project = "stg-piny940" + routing_mode = (known after apply) + self_link = (known after apply) ***  # google_compute_subnetwork.default will be created  + resource "google_compute_subnetwork" "default" *** + creation_timestamp = (known after apply) + external_ipv6_prefix = (known after apply) + fingerprint = (known after apply) + gateway_address = (known after apply) + id = (known after apply) + internal_ipv6_prefix = (known after apply) + ip_cidr_range = "10.0.1.0/24" + ipv6_cidr_range = (known after apply) + name = "my-custom-subnet" + network = (known after apply) + private_ip_google_access = (known after apply) + private_ipv6_google_access = (known after apply) + project = "stg-piny940" + purpose = (known after apply) + region = "us-west1" + self_link = (known after apply) + stack_type = (known after apply) + secondary_ip_range (known after apply) *** Plan: 3 to add, 0 to change, 0 to destroy.  ───────────────────────────────────────────────────────────────────────────── Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply" now.