inputs:
  env:
    description: "Environment to deploy to"
    required: true
  gcp-project:
    description: "GCP Project ID"
    required: true
  gcp-project-number:
    description: "GCP Project Number"
    required: true
  gh-token:
    description: "GitHub Token
    required: true

runs:
  steps:
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
    - id: "gcp-auth"
      name: "Authenticate to Google Cloud"
      uses: "google-github-actions/auth@v2"
      with:
        project_id: ${{ inputs.gcp-project }}
        create_credentials_file: true
        workload_identity_provider: "projects/${{ inputs.gcp-project-number }}/locations/global/workloadIdentityPools/pool/providers/terraform-github-actions"
        service_account: "terraform-github-actions@${{ inputs.gcp-project }}.iam.gserviceaccount.com"
    - name: Terraform Init
      run: cd terraform/${{ inputs.env }} && terraform init
    - name: Terraform Plan
      run: cd terraform/${{ inputs.env }} && terraform plan -no-color -input=false > plan.txt
      continue-on-error: true
    - name: Create Message
      id: CreateMessage
      run: |
        cd terraform/${{ inputs.env }}
        result=$(cat plan.txt)
        pattern="Plan: [0-9]+ to add, [0-9]+ to change, [0-9]+ to destroy"
        {
          echo "comment<<EOF"
          if [[ ${result} =~ ${pattern} ]]; then
            summary=$(echo "$result" | grep -oE "$pattern")
            printf "# Terraform plan for ${{ inputs.env }}\n\n"
            printf "\`\`\`\n"
            printf "$summary\n"
            printf "\`\`\`\n\n"
            printf "<details>\n"
            printf "<summary>Terraform Plan Details</summary>\n\n"
            printf "\`\`\`\n"
            printf "$result\n"
            printf "\`\`\`\n\n"
            printf "</details>\n"
          else
            printf "# Terraform plan for ${{ inputs.env }}\n\n"
            printf "\`\`\`\n"
            printf "$result\n"
            printf "\`\`\`\n"
          fi
          echo "EOF"
        } >> "$GITHUB_ENV"
    - name: Comment PR
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        header: Terraform Plan for ${{ inputs.env }}
        message: ${{ env.comment }}
      env:
        GH_TOKEN: ${{ inputs.gh-token }}
