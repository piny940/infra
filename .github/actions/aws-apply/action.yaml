inputs:
  env:
    description: "Environment to deploy to"
    required: true
  aws-region:
    description: "AWS region"
    required: true
  aws-role-arn:
    description: "ARN of the role to assume to update health check"
    required: true
  gcp-project:
    description: "GCP Project ID"
    required: true
  gcp-project-number:
    description: "GCP Project Number"
    required: true
  gh-token:
    description: "GitHub Token"
    required: true

runs:
  using: composite
  steps:
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
    - name: Authenticate to Google Cloud # secret managerだけはGCPを使うため必要
      uses: "google-github-actions/auth@v2"
      with:
        project_id: ${{ inputs.gcp-project }}
        create_credentials_file: true
        workload_identity_provider: "projects/${{ inputs.gcp-project-number }}/locations/global/workloadIdentityPools/pool/providers/repo-github-actions"
        service_account: "terraform-github-actions@${{ inputs.gcp-project }}.iam.gserviceaccount.com"
    - name: configure-aws-credentials
      uses: aws-actions/configure-aws-credentials@master
      with:
        aws-region: ${{ inputs.aws-region }}
        role-to-assume: ${{ inputs.aws-role-arn }}
        role-session-name: GitHubActions
    - name: get-caller-identity is allowed to run on role.
      shell: bash
      run: aws sts get-caller-identity
    - name: Terraform Init
      run: cd aws/${{ inputs.env }} && terraform init
      shell: bash
    - name: Terraform Plan
      run: cd aws/${{ inputs.env }} && terraform plan -no-color -input=false > plan.txt
      shell: bash
    - name: Terraform Apply
      run: cd aws/${{ inputs.env }} && terraform apply -auto-approve
      id: tf-apply
      shell: bash
