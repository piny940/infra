name: Production Deploy
on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  packages: write
jobs:
  path-filter:
    runs-on: ubuntu-latest
    outputs:
      kube: ${{ steps.path-filter.outputs.kube }}
      svcmtr: ${{ steps.path-filter.outputs.svcmtr }}
      tf: ${{ steps.path-filter.outputs.tf }}
      fluxupd: ${{ steps.path-filter.outputs.fluxupd }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: path-filter
        with:
          filters: |
            kube:
              - "kubernetes/**"
              - ".github/workflows/stg-deploy.yaml"
            svcmtr:
              - "service-monitor/**"
              - ".github/workflows/stg-deploy.yaml"
            tf:
              - "terraform/**"
              - ".github/workflows/stg-deploy.yaml"
            fluxupd:
              - "flux-target-updater/**"
              - ".github/workflows/stg-deploy.yaml"

  service-monitor:
    runs-on: ubuntu-latest
    needs: path-filter
    if: needs.path-filter.outputs.svcmtr == 'true'
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_UPDATE_HEALTH_CHECK_ARN }}
          role-session-name: GitHubActions
      - name: get-caller-identity is allowed to run on role.
        run: aws sts get-caller-identity
      - name: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          cd service-monitor && pip3 install -r requirements.txt -t .
      - name: lambda update
        run: |
          pip3 install awscli
          cd service-monitor && zip -r package.zip ./*
          aws lambda update-function-code --function-name checkHealthiness --zip-file fileb://package.zip --publish
