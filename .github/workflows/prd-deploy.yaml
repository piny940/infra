name: Production Deploy
on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  packages: write
jobs:
  path-filter:
    runs-on: ubuntu-latest
    outputs:
      kube: ${{ steps.path-filter.outputs.kube }}
      svcmtr: ${{ steps.path-filter.outputs.svcmtr }}
      gcp: ${{ steps.path-filter.outputs.gcp }}
      aws: ${{ steps.path-filter.outputs.aws }}
      fluxupd: ${{ steps.path-filter.outputs.fluxupd }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: path-filter
        with:
          filters: |
            kube:
              - "kubernetes/**"
              - ".github/workflows/prd-deploy.yaml"
            svcmtr:
              - "service-monitor/**"
              - ".github/workflows/prd-deploy.yaml"
            tf:
              - "terraform/**"
              - ".github/workflows/prd-deploy.yaml"
            aws:
              - "aws/**"
              - ".github/workflows/prd-deploy.yaml"
            fluxupd:
              - "flux-target-updater/**"
              - ".github/workflows/prd-deploy.yaml"

  gcp-apply:
    runs-on: ubuntu-latest
    needs: path-filter
    if: needs.path-filter.outputs.gcp == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Terraform Apply
        uses: ./.github/actions/tf-apply
        with:
          env: production
          gcp_project: ${{ vars.PRD_GCP_PROJECT }}
          gcp_project_number: ${{ vars.PRD_GCP_PROJECT_NUMBER }}
  aws-apply:
    runs-on: ubuntu-latest
    needs: path-filter
    if: needs.path-filter.outputs.aws == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Terraform Apply
        uses: ./.github/actions/aws-apply
        with:
          env: "production"
          aws-region: ${{ vars.AWS_REGION }}
          aws-role-arn: ${{ vars.AWS_GITHUB_ACTIONS_ROLE_ARN }}
          gh-token: ${{ secrets.GITHUB_TOKEN }}
  service-monitor:
    runs-on: ubuntu-latest
    needs: path-filter
    if: needs.path-filter.outputs.svcmtr == 'true'
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Deploy
        uses: ./github/actions/service-monitor-deploy
        with:
          func-name: checkHealthiness
          region: ${{ secrets.AWS_REGION }}
          role-arn: ${{ secrets.AWS_UPDATE_HEALTH_CHECK_ARN }}
