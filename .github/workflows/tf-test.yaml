name: Test Terraform
on:
  pull_request:
    paths:
      - "terraform/**"
      - ".github/workflows/tf-test.yaml"
  push:
    paths:
      - "terraform/**"
      - ".github/workflows/tf-test.yaml"
    branches:
      - main
permissions:
  id-token: write
  contents: read
  pull-requests: write
jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5
      - name: Terraform fmt
        run: terraform fmt -check -recursive
  plan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [staging, production]
    environment: ${{ matrix.env }}
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - id: "gcp-auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          project_id: ${{ vars.GCP_PROJECT }}
          create_credentials_file: true
          workload_identity_provider: "projects/${{ vars.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/pool/providers/terraform-github-actions"
          service_account: "terraform-github-actions@${{ vars.GCP_PROJECT }}.iam.gserviceaccount.com"
      - name: Terraform Init
        run: cd terraform/${{ matrix.env }} && terraform init
      - name: Terraform Plan
        run: cd terraform/${{ matrix.env }} && terraform plan -no-color -input=false > plan.txt
        continue-on-error: true
      - name: Create Message
        id: CreateMessage
        run: |
          cd terraform/${{ matrix.env }}
          result=$(cat plan.txt)
          pattern="Plan: [0-9]+ to add, [0-9]+ to change, [0-9]+ to destroy"
          msg="# Terraform plan for staging\n\n"
          if [[ ${result} =~ ${pattern} ]]; then
            summary=$(echo "$result" | grep -oE "$pattern")
            msg+="\`\`\`\n"
            msg+="$summary\n"
            msg+="\`\`\`\n\n"
            msg+="<details>\n"
            msg+="<summary>Terraform Plan Details</summary>\n\n"
            msg+="\`\`\`\n"
            msg+="$result\n"
            msg+="\`\`\`\n\n"
            msg+="</details>\n"

            if [[ staging == 'staging' ]]; then
              msg+="Please apply the changes to the staging environment using the [Terraform apply workflow](https://github.com/piny940/infra/actions/workflows/tf-apply.yaml)\n"
            fi
          else
            msg+="# Terraform plan for staging\n\n"
            msg+="\`\`\`\n"
            msg+="$result\n"
            msg+="\`\`\`\n"
          fi

          echo "MSG=$msg" >> "$GITHUB_OUTPUT"
      - name: Comment PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: Terraform Plan for ${{ matrix.env }}
          message: ${{ steps.CreateMessage.outputs.MSG }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
